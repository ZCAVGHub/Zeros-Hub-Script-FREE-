local Style = {
	BackgroundColor_01 = Color3.fromRGB(15, 15, 15),
	BackgroundColor_02 = Color3.fromRGB(18, 18, 18),
	Image = "rbxassetid://12748190212",
	ImageColor = Color3.fromRGB(0, 0, 0),
	ImageBackgroundColor = Color3.fromRGB(255, 255, 255),
	BorderColor = Color3.fromRGB(135, 0, 0),
	LineColor = Color3.fromRGB(150, 0, 0),
	SlideButtonColor = Color3.fromRGB(138, 0, 0),
	ButtonColor_ON = Color3.fromRGB(188, 0, 0),
	ButtonColor_OFF = Color3.fromRGB(18, 18, 18),
	FrameColor = Color3.fromRGB(0, 0, 0),
	OptionFrameColor = Color3.fromRGB(27, 27, 27),
	ButtonColor = Color3.fromRGB(8, 8, 8),
	ButtonClickColor = Color3.fromRGB(20, 0, 0),

	Fonts = Enum.Font.Code
}
local name = "Zeros X Hub Driving Empire"

local Style_name_file = "zeros setting.txt"
local Saving_name_file = "zeros saving.txt"

local HttpService = game:GetService("HttpService")

function loadFile (name, to)
	if (readfile and isfile and isfile(name)) then
		to = HttpService:JSONDecode(readfile(name))
	else
		to = to
	end
end

function SaveFile (name, tb)
	local json
	if (writefile) then
		json = HttpService:JSONEncode(tb)
		writefile(name, json)
	end
end


local NewUI = Instance.new("ScreenGui")
local MainFrameContainer = Instance.new("Frame")
local ImageBackgroundContainer = Instance.new("ImageLabel")

local TextName = Instance.new("TextLabel")

local ButtonBar = Instance.new("Frame")
local UIListLayout_ButtonBar = Instance.new("UIListLayout")

local SelectFrame = Instance.new("ScrollingFrame", NewUI)
local UIGridLayout_SelectFrame = Instance.new("UIGridLayout")

local Color_Pad = Instance.new("Frame")
local Preview = Instance.new("Frame")
local colorR = Instance.new("Frame")
local Button = Instance.new("TextButton")
local Text = Instance.new("TextLabel")
local UIGradient_R = Instance.new("UIGradient")
local colorG = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local Text_2 = Instance.new("TextLabel")
local UIGradient_G = Instance.new("UIGradient")
local colorB = Instance.new("Frame")
local Button_3 = Instance.new("TextButton")
local Text_3 = Instance.new("TextLabel")
local UIGradient_B = Instance.new("UIGradient")
local Enter_Button = Instance.new("TextButton")

NewUI.Name = "Zeros Hub Driving Empire"
NewUI.Parent = game.CoreGui--game.Players.LocalPlayer:WaitForChild("PlayerGui")
NewUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

MainFrameContainer.Name = "MainFrameContainer"
MainFrameContainer.Parent = NewUI
MainFrameContainer.BackgroundColor3 = Style["BackgroundColor_02"]
MainFrameContainer.BorderColor3 = Style["BorderColor"]
MainFrameContainer.Position = UDim2.new(0.237012982, 0, 0.0463509709, 0)
MainFrameContainer.Size = UDim2.new(0, 390, 0, 470)
MainFrameContainer.Draggable = true
MainFrameContainer.Selectable = true
MainFrameContainer.Active = true

ImageBackgroundContainer.Name = "ImageBackgroundContainer"
ImageBackgroundContainer.Parent = MainFrameContainer
ImageBackgroundContainer.BackgroundColor3 = Style["ImageBackgroundColor"]
ImageBackgroundContainer.BorderColor3 = Style["BorderColor"]
ImageBackgroundContainer.Position = UDim2.new(0.0179487187, 0, 0.0531914905, 0)
ImageBackgroundContainer.Size = UDim2.new(0, 376, 0, 438)
ImageBackgroundContainer.Image = Style["Image"]
ImageBackgroundContainer.ImageColor3 = Color3.fromRGB(33, 33, 33)

ButtonBar.Name = "ButtonBar"
ButtonBar.Parent = ImageBackgroundContainer
ButtonBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ButtonBar.BackgroundTransparency = 1.000
ButtonBar.Position = UDim2.new(0.0212765951, 0, 0.0154833859, 0)
ButtonBar.Size = UDim2.new(0, 361, 0, 18)

UIListLayout_ButtonBar.Name = "UIListLayout_ButtonBar"
UIListLayout_ButtonBar.Parent = ButtonBar
UIListLayout_ButtonBar.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_ButtonBar.SortOrder = Enum.SortOrder.LayoutOrder

TextName.Name = "Zeros Hub Driving Empire"
TextName.Parent = MainFrameContainer
TextName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextName.BackgroundTransparency = 1.000
TextName.BorderColor3 = Style["BorderColor"]
TextName.Position = UDim2.new(0.0179487187, 0, 0, 0)
TextName.Size = UDim2.new(0, 376, 0, 25)
TextName.Font = Style["Fonts"]
TextName.Text = ""
TextName.TextColor3 = Color3.fromRGB(226, 226, 226)
TextName.TextSize = 14.000
TextName.TextXAlignment = Enum.TextXAlignment.Left

SelectFrame.Name = "SelectFrame"
SelectFrame.Active = true
SelectFrame.BackgroundColor3 = Style["BackgroundColor_02"]
SelectFrame.BorderColor3 = Style["BorderColor"]
SelectFrame.Size = UDim2.new(0, 169, 0, 75)
SelectFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
SelectFrame.Visible = false
SelectFrame.ScrollBarThickness = 0
SelectFrame.ZIndex = 5

UIGridLayout_SelectFrame.Name = "UIGridLayout_SelectFrame"
UIGridLayout_SelectFrame.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_SelectFrame.Parent = SelectFrame
UIGridLayout_SelectFrame.CellSize = UDim2.new(0, 169, 0, 14)

Color_Pad.Name = "Color_Pad"
Color_Pad.Parent = NewUI
Color_Pad.BackgroundColor3 = Style["BackgroundColor_02"]
Color_Pad.BorderColor3 = Style["BorderColor"]
Color_Pad.Position = UDim2.new(0.407615155, 0, 0.415254235, 0)
Color_Pad.Size = UDim2.new(0, 100, 0, 129)
Color_Pad.Visible = false

Preview.Name = "Preview"
Preview.Parent = Color_Pad
Preview.BackgroundColor3 = Style["BackgroundColor_02"]
Preview.BorderColor3 = Style["BorderColor"]
Preview.Position = UDim2.new(0.0661181659, 0, 0.0881353766, 0)
Preview.Size = UDim2.new(0, 85, 0, 32)

colorR.Name = "colorR"
colorR.Parent = Color_Pad
colorR.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
colorR.BorderColor3 = Style["BorderColor"]
colorR.Position = UDim2.new(0.0661181659, 0, 0.410615981, 0)
colorR.Size = UDim2.new(0, 60, 0, 10)

Button.Name = "Button"
Button.Parent = colorR
Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Button.BorderColor3 = Style["BorderColor"]
Button.Size = UDim2.new(0, 2, 0, 10)
Button.Font = Style["Fonts"]
Button.Text = ""
Button.TextColor3 = Color3.fromRGB(0, 0, 0)
Button.TextSize = 14.000

Text.Name = "Text"
Text.Parent = colorR
Text.BackgroundColor3 = Style["BackgroundColor_02"]
Text.BorderColor3 = Style["BorderColor"]
Text.Position = UDim2.new(1, 0, 0, 0)
Text.Size = UDim2.new(0, 25, 0, 10)
Text.Font = Style["Fonts"]
Text.Text = "0"
Text.TextColor3 = Color3.fromRGB(255, 255, 255)

UIGradient_R.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 0))}
UIGradient_R.Name = "UIGradient_R"
UIGradient_R.Parent = colorR

colorG.Name = "colorG"
colorG.Parent = Color_Pad
colorG.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
colorG.BorderColor3 = Style["BorderColor"]
colorG.Position = UDim2.new(0.0661181659, 0, 0.547360182, 0)
colorG.Size = UDim2.new(0, 60, 0, 10)

Button_2.Name = "Button"
Button_2.Parent = colorG
Button_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Button_2.BorderColor3 = Style["BorderColor"]
Button_2.Size = UDim2.new(0, 2, 0, 10)
Button_2.Font = Style["Fonts"]
Button_2.Text = ""
Button_2.TextColor3 = Color3.fromRGB(0, 0, 0)
Button_2.TextSize = 14.000

Text_2.Name = "Text"
Text_2.Parent = colorG
Text_2.BackgroundColor3 = Style["BackgroundColor_02"]
Text_2.BorderColor3 = Style["BorderColor"]
Text_2.Position = UDim2.new(1, 0, 0, 0)
Text_2.Size = UDim2.new(0, 25, 0, 10)
Text_2.Font = Style["Fonts"]
Text_2.Text = "0"
Text_2.TextColor3 = Color3.fromRGB(255, 255, 255)

UIGradient_G.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 255, 0))}
UIGradient_G.Name = "UIGradient_G"
UIGradient_G.Parent = colorG

colorB.Name = "colorB"
colorB.Parent = Color_Pad
colorB.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
colorB.BorderColor3 = Style["BorderColor"]
colorB.Position = UDim2.new(0.0661181659, 0, 0.684104383, 0)
colorB.Size = UDim2.new(0, 60, 0, 10)

Button_3.Name = "Button"
Button_3.Parent = colorB
Button_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Button_3.BorderColor3 = Style["BorderColor"]
Button_3.Size = UDim2.new(0, 2, 0, 10)
Button_3.Font = Style["Fonts"]
Button_3.Text = ""
Button_3.TextColor3 = Color3.fromRGB(0, 0, 0)
Button_3.TextSize = 14.000

Text_3.Name = "Text"
Text_3.Parent = colorB
Text_3.BackgroundColor3 = Style["BackgroundColor_02"]
Text_3.BorderColor3 = Style["BorderColor"]
Text_3.Position = UDim2.new(1, 0, 0, 0)
Text_3.Size = UDim2.new(0, 25, 0, 10)
Text_3.Font = Style["Fonts"]
Text_3.Text = "0"
Text_3.TextColor3 = Color3.fromRGB(255, 255, 255)

UIGradient_B.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 0, 255))}
UIGradient_B.Name = "UIGradient_B"
UIGradient_B.Parent = colorB

Enter_Button.Name = "Enter_Button"
Enter_Button.Parent = Color_Pad
Enter_Button.BackgroundColor3 = Style["BackgroundColor_02"]
Enter_Button.BorderColor3 = Style["BorderColor"]
Enter_Button.Position = UDim2.new(0.0799999982, 0, 0.809379876, 0)
Enter_Button.Size = UDim2.new(0, 83, 0, 18)
Enter_Button.Font = Style["Fonts"]
Enter_Button.Text = "Enter"
Enter_Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Enter_Button.TextSize = 11.000

------------------------------------------------------------
------------------------------ function create ui
------------------------------------------------------------

function new_framebutton (name)
	local FrameButton = Instance.new("TextButton")
	FrameButton.Name = "FrameButton_"..name
	FrameButton.Parent = ButtonBar
	FrameButton.BackgroundColor3 = Style["OptionFrameColor"]
	FrameButton.BorderColor3 = Color3.fromRGB(35, 35, 35)
	FrameButton.Size = UDim2.new(0, 92, 0, 16)
	FrameButton.Font = Style["Fonts"]
	FrameButton.Text = name
	FrameButton.TextColor3 = Color3.fromRGB(214, 214, 214)
	FrameButton.TextSize = 13.000

	return FrameButton
end
function new_frame ()
	local Frame = Instance.new("Frame")
	local SF_1 = Instance.new("ScrollingFrame")
	local UIListLayout_in_SF_1 = Instance.new("UIListLayout")
	local SF_2 = Instance.new("ScrollingFrame")
	local UIListLayout_in_SF_2 = Instance.new("UIListLayout")
	Frame.Parent = ImageBackgroundContainer
	Frame.BackgroundColor3 = Style["FrameColor"]
	Frame.BackgroundTransparency = 0.600
	Frame.BorderColor3 = Style["BorderColor"]
	Frame.Position = UDim2.new(0.0212765951, 0, 0.0565792769, 0)
	Frame.Size = UDim2.new(0, 361, 0, 404)
	SF_1.Name = "SF_1"
	SF_1.Parent = Frame
	SF_1.Active = true
	SF_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SF_1.BackgroundTransparency = 1.000
	SF_1.Position = UDim2.new(0.0119717671, 0, 0.025710484, 0)
	SF_1.Size = UDim2.new(0, 172, 0, 387)
	SF_1.CanvasSize = UDim2.new(0, 0, 0.5, 0)
	SF_1.ScrollBarThickness = 0
	UIListLayout_in_SF_1.Name = "UIListLayout_in_SF_1"
	UIListLayout_in_SF_1.Parent = SF_1
	UIListLayout_in_SF_1.Padding = UDim.new(0, 20)
	UIListLayout_in_SF_1.FillDirection = Enum.FillDirection.Vertical
	UIListLayout_in_SF_1.SortOrder = Enum.SortOrder.LayoutOrder
	SF_2.Name = "SF_2"
	SF_2.Parent = Frame
	SF_2.Active = true
	SF_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SF_2.BackgroundTransparency = 1.000
	SF_2.Position = UDim2.new(0.509390533, 0, 0.025710484, 0)
	SF_2.Size = UDim2.new(0, 171, 0, 386)
	SF_2.CanvasSize = UDim2.new(0, 0, 0.5, 0)
	SF_2.ScrollBarThickness = 0
	UIListLayout_in_SF_2.Name = "UIListLayout_in_SF_2"
	UIListLayout_in_SF_2.Parent = SF_2
	UIListLayout_in_SF_2.Padding = UDim.new(0, 10)
	UIListLayout_in_SF_2.FillDirection = Enum.FillDirection.Vertical
	UIListLayout_in_SF_2.SortOrder = Enum.SortOrder.LayoutOrder

	return {["Frame"]=Frame,["SF_1"] = SF_1,["SF_2"] = SF_2}
end
function new_optionframe (hight_107,parent)
	local OptionFrame = Instance.new("Frame")
	local UIListLayout_in_OptionFrame = Instance.new("UIGridLayout")
	OptionFrame.Name = "OptionFrame"
	OptionFrame.Parent = parent
	OptionFrame.BackgroundColor3 = Style["OptionFrameColor"]
	OptionFrame.BorderColor3 = Color3.fromRGB(31, 31, 31)
	OptionFrame.Size = UDim2.new(0, 172, 0, hight_107)
	UIListLayout_in_OptionFrame.Name = "UIListLayout_in_OptionFrame"
	UIListLayout_in_OptionFrame.Parent = OptionFrame
	UIListLayout_in_OptionFrame.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout_in_OptionFrame.CellSize = UDim2.new(0, 171, 0, 16)
	
	return OptionFrame
end
function new_headtext (text, parent)
	local HeadText = Instance.new("TextLabel")
	HeadText.ZIndex = 0
	HeadText.Name = "HeadText"
	HeadText.Parent = parent
	HeadText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	HeadText.BackgroundTransparency = 1.000
	HeadText.Position = UDim2.new(0.00581395347, 0, 0.00999999978, 0)
	HeadText.Size = UDim2.new(0, 171, 0, 22)
	HeadText.Font = Style["Fonts"]
	HeadText.Text = text
	HeadText.TextColor3 = Color3.fromRGB(222, 222, 222)
	HeadText.TextSize = 14.000
	
	return HeadText
end
function new_line (parent)
	local Line = Instance.new("Frame")
	Line.ZIndex = 0
	Line.Parent = parent
	Line.BackgroundColor3 = Style["LineColor"]
	Line.BorderSizePixel = 0
	Line.Size = UDim2.new(0, 172, 0, 1)
	
	return Line
end
function new_button (text, parent)
	local Button = Instance.new("Frame")
	local TextButton = Instance.new("TextButton")
	local TextLabel = Instance.new("TextLabel")
	Button.Name = "Button"
	Button.Parent = parent
	Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Button.BackgroundTransparency = 1.000
	Button.Size = UDim2.new(0, 100, 0, 100)
	Button.ZIndex = 0

	TextButton.Parent = Button
	TextButton.BackgroundColor3 = Style["ButtonColor_OFF"]
	TextButton.BorderColor3 = Color3.fromRGB(53, 53, 53)
	TextButton.Position = UDim2.new(0, 2, 0.0625, 0)
	TextButton.Size = UDim2.new(0, 14, 0, 14)
	TextButton.Name = "Button"
	TextButton.Font = Enum.Font.SourceSans
	TextButton.Text = ""
	TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
	TextButton.TextSize = 14.000

	TextLabel.Parent = Button
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.Position = UDim2.new(0.128654972, 0, 0.0625, 0)
	TextLabel.Size = UDim2.new(0, 149, 0, 14)
	TextLabel.Font = Style["Fonts"]
	TextLabel.Text = text
	TextLabel.Name = "Text"
	TextLabel.TextColor3 = Color3.fromRGB(211, 211, 211)
	TextLabel.TextSize = 12.000
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left
	
	return TextButton
end
function new_textlabel (text, parent)
	local TextLabel_2 = Instance.new("TextLabel")
	TextLabel_2.ZIndex = 0
	TextLabel_2.Parent = parent
	TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.BackgroundTransparency = 1.000
	TextLabel_2.Position = UDim2.new(0.00581395347, 0, 0.00999999978, 0)
	TextLabel_2.Size = UDim2.new(0, 171, 0, 16)
	TextLabel_2.Font = Style["Fonts"]
	TextLabel_2.Text = " "..text
	TextLabel_2.TextColor3 = Color3.fromRGB(222, 222, 222)
	TextLabel_2.TextSize = 13.000
	TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left
	
	return TextLabel_2
end
function new_selectbutton (parent)
	local SelectButton = Instance.new("Frame")
	local Text = Instance.new("TextLabel")
	local Button_2 = Instance.new("TextButton")
	
	SelectButton.Name = "SelectButton"
	SelectButton.Parent = parent
	SelectButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SelectButton.BackgroundTransparency = 1.000
	SelectButton.Size = UDim2.new(0, 100, 0, 100)
	SelectButton.ZIndex = 0

	Text.Name = "Text"
	Text.Parent = SelectButton
	Text.BackgroundColor3 = Color3.fromRGB(16, 16, 16)
	Text.BorderColor3 = Style["ButtonColor"]
	Text.Position = UDim2.new(0, 1, 0.0500001907, 0)
	Text.Size = UDim2.new(0, 169, 0, 14)
	Text.Font = Style["Fonts"]
	Text.Text = "---"
	Text.TextColor3 = Color3.fromRGB(213, 213, 213)
	Text.TextSize = 10.000

	Button_2.Name = "Button"
	Button_2.Parent = Text
	Button_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Button_2.BackgroundTransparency = 1.000
	Button_2.Position = UDim2.new(0.930447459, 0, -0.0928569809, 0)
	Button_2.Size = UDim2.new(0, 12, 0, 14)
	Button_2.Font = Enum.Font.SourceSans
	Button_2.Text = "▼"
	Button_2.TextColor3 = Color3.fromRGB(166, 166, 166)
	
	return SelectButton
end
function new_slidebutton (max, parent)
	local Slide = Instance.new("Frame")
	local Frame_3 = Instance.new("Frame")
	local TextButton_2 = Instance.new("TextButton")
	local TextLabel_3 = Instance.new("TextLabel")
	local value = Instance.new("DoubleConstrainedValue")
	
	value.Parent = Slide
	value.Value = 0
	value.MaxValue = tonumber(max)
	
	Slide.Name = "Slide"
	Slide.Parent = parent
	Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Slide.BackgroundTransparency = 1.000
	Slide.Size = UDim2.new(0, 100, 0, 100)
	Slide.ZIndex = 0

	Frame_3.Parent = Slide
	Frame_3.BackgroundColor3 = Color3.fromRGB(16, 16, 16)
	Frame_3.BorderColor3 = Style["ButtonColor"]
	Frame_3.Position = UDim2.new(0, 1, 0.0500000007, 0)
	Frame_3.Size = UDim2.new(0, 169, 0, 14)
	Frame_3.ZIndex = 1

	TextButton_2.Parent = Frame_3
	TextButton_2.ZIndex = 1
	TextButton_2.BackgroundColor3 = Style["SlideButtonColor"]
	TextButton_2.BorderSizePixel = 0
	TextButton_2.Name = "BT"
	TextButton_2.Size = UDim2.new(0, 2, 0, 13)
	TextButton_2.Font = Enum.Font.SourceSans
	TextButton_2.Text = ""
	TextButton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
	TextButton_2.TextSize = 14.000

	TextLabel_3.Parent = Slide
	TextLabel_3.ZIndex = 1
	TextLabel_3.Name = "Text"
	TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_3.BackgroundTransparency = 1.000
	TextLabel_3.BorderColor3 = Color3.fromRGB(27, 42, 53)
	TextLabel_3.Position = UDim2.new(0.023391813, 0, 0.112500191, 0)
	TextLabel_3.Size = UDim2.new(0, 165, 0, 13)
	TextLabel_3.Font = Style["Fonts"]
	TextLabel_3.Text = "0/"..tostring(max)
	TextLabel_3.TextColor3 = Color3.fromRGB(216, 216, 216)
	
	return Slide
end
function new_selectcolor (text, parent)
	local Color = Instance.new("Frame")
	local Text = Instance.new("TextLabel")
	local Button = Instance.new("TextButton")

	Color.Name = "Color"
	Color.Parent = parent
	Color.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Color.BackgroundTransparency = 1.000
	Color.Size = UDim2.new(0, 100, 0, 100)

	Text.Name = "Text"
	Text.Parent = Color
	Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Text.BackgroundTransparency = 1.000
	Text.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Text.Position = UDim2.new(0.222222224, 0, 0.112500191, 0)
	Text.Size = UDim2.new(0, 131, 0, 13)
	Text.Font = Style["Fonts"]
	Text.Text = text
	Text.TextColor3 = Color3.fromRGB(216, 216, 216)
	Text.TextXAlignment = Enum.TextXAlignment.Left

	Button.Name = "Button"
	Button.Parent = Color
	Button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Button.BorderColor3 = Style["BorderColor"]
	Button.Position = UDim2.new(0, 4, 0, 1)
	Button.Size = UDim2.new(0, 26, 0, 13)
	Button.Font = Style["Fonts"]
	Button.Text = ""
	Button.TextColor3 = Color3.fromRGB(0, 0, 0)
	Button.TextSize = 14.000
	
	return Button
end

function new_button_click (text, parent)
	local SelectButtonClick = Instance.new("Frame")
	local Button = Instance.new("TextButton")

	SelectButtonClick.Name = "SelectButtonClick"
	SelectButtonClick.Parent = parent
	SelectButtonClick.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SelectButtonClick.BackgroundTransparency = 1.000
	SelectButtonClick.Size = UDim2.new(0, 100, 0, 100)

	Button.Name = "Button"
	Button.Parent = SelectButtonClick
	Button.BackgroundColor3 = Style["ButtonClickColor"]
	Button.BorderColor3 = Style["BorderColor"]
	Button.Position = UDim2.new(0, 1, 0.0500000007, 0)
	Button.Size = UDim2.new(0, 169, 0, 14)
	Button.Font = Style["Fonts"]
	Button.Text = text
	Button.TextColor3 = Color3.fromRGB(166, 166, 166)
	Button.TextSize = 12.000
end
------------------------------------------------------------
------------------------------ service
------------------------------------------------------------
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
local CurrentCamera = game.Workspace.CurrentCamera

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

------------------------------------------------------------
------------------------------ other function
------------------------------------------------------------
function Find (parent,obj)
	if parent:FindFirstChild(obj) then
		return parent:FindFirstChild(obj)
	else
		return nil
	end
end
function GetCharacter(plr)
	local Character = plr.Character or plr.CharacterAdded:Wait()
	if Character then
		return Character
	else
		return nil
	end
end
function GetHumanoid(plr)
	local cha = GetCharacter(plr)
	if cha then
		if cha:FindFirstChild("Humanoid") then
			return cha:FindFirstChild("Humanoid")
		else
			return nil
		end
	else
		return nil
	end
end
function GetHumanoidRootPart(plr)
	local cha = GetCharacter(plr)
	if cha then
		if cha:FindFirstChild("HumanoidRootPart") then
			return cha:FindFirstChild("HumanoidRootPart")
		else
			return nil
		end
	else
		return nil
	end
end
function Alert (img,head,text)
	game.StarterGui:SetCore("SendNotification", {
		Title = head,
		Text = text,
		Icon = img,
		Duration = "7"
	})
end
function Looking (part)
	CurrentCamera.CFrame = CFrame.new(CurrentCamera.CFrame.Position,part.Position)
end
------------------------------------------------------------
------------------------------ function using ui
------------------------------------------------------------

function close_select ()
	for _,v in pairs(SelectFrame:GetChildren()) do
		if v.Name ~= "UIGridLayout_SelectFrame" then
			v:Destroy()
		end
	end
	SelectFrame.Visible = false
end
function open_select (tables,text)
	close_select()
	for _,v in pairs(tables) do
		if v  then
			local SelectButton = Instance.new("TextButton")
			SelectButton.Name = v.."_Button"
			SelectButton.Text = v
			SelectButton.Parent = SelectFrame
			SelectButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SelectButton.BackgroundTransparency = 1.000
			SelectButton.Position = UDim2.new(0.00591715984, 0, 0.0133333337, 0)
			SelectButton.Size = UDim2.new(0, 167, 0, 50)
			SelectButton.Font = Style["Fonts"]
			SelectButton.TextColor3 = Color3.fromRGB(222, 222, 222)
			SelectButton.TextSize = 10.000
			SelectButton.MouseButton1Down:Connect(function()
				text.Text = SelectButton.Text
				close_select()
			end)
		end
	end
	SelectFrame.Position = UDim2.new(0,Mouse.X-SelectFrame.Size.X.Offset,0,Mouse.Y)
	SelectFrame.Visible = true
end
function link_button_to_frame (button,frame)
	button.MouseButton1Down:Connect(function()
		for _,v in pairs(ImageBackgroundContainer:GetChildren()) do
			if v.Name ~= "ButtonBar" then
				v.Visible = false
			end
		end
		frame.Visible = true
	end)
end
function slide (button, count)
	local db = false
	local Per = 0
	local function Snap (num, factor)
		if num == 0 then
			return num
		else
			return math.floor(num / factor + 0.5) * factor
		end
	end
	UserInputService.InputEnded:Connect(function(key)
		if key.UserInputType == Enum.UserInputType.MouseButton1 then
			db = false
		end
	end)
	button["Frame"]["BT"].MouseButton1Down:Connect(function()
		db = true
	end)
	RunService.RenderStepped:Connect(function()
		if db then
			local MousePosX = UserInputService:GetMouseLocation().X
			local ButtonPos = button["Frame"]["BT"].Position
			local FrameSizeX = button["Frame"].AbsoluteSize.X
			local FramePosX = button["Frame"].AbsolutePosition.X
			local Pos = Snap((MousePosX-FramePosX)/FrameSizeX,0.00001)
			Per = math.clamp(Pos, 0, 1)
			button["Frame"]["BT"].Position = UDim2.new(Per, 0, ButtonPos.Y.Scale, ButtonPos.Y.Offset)
		end
	end)
	button["Frame"]["BT"].Changed:Connect(function()
		local Scale = button["Frame"]["BT"].Position.X.Scale
		local Num = math.floor(Scale * button["Value"].MaxValue)*count
		button["Value"].Value = Num
		button["Text"].Text =  button["Value"].Value.."/"..button["Value"].MaxValue
	end)
end
function color (button)
	button.MouseButton1Down:Connect(function()
		Color_Pad.Visible = true
		local dbs = false
		if dbs == false then
			local Frame = Color_Pad
			Frame.Position = UDim2.new(0,Mouse.X,0,Mouse.Y)
			local Preview = Preview

			local color_frame_R = Frame.colorR
			local bt_color_R= color_frame_R.Button
			local color_frame_G = Frame.colorG
			local bt_color_G= color_frame_G.Button
			local color_frame_B = Frame.colorB
			local bt_color_B= color_frame_B.Button
			
			bt_color_R.Position = UDim2.new(0, 0, 0, 0)
			bt_color_G.Position = UDim2.new(0, 0, 0, 0)
			bt_color_B.Position = UDim2.new(0, 0, 0, 0)

			local Enter_Button = Frame.Enter_Button
			local Enter_Button_New = Enter_Button:Clone()
			Enter_Button_New.Parent = Frame
			Enter_Button_New.Visible = true
			Enter_Button.Visible = false

			local UserInputService = game:GetService("UserInputService")
			local Player = game:GetService("Players").LocalPlayer
			local Mouse = Player:GetMouse()
			local RunService = game:GetService("RunService")

			local Color = {R = 0, G = 0, B = 0}

			local function slide(bt, frame, KEY)
				local db = false
				local Per = 0
				local function Snap (num, factor)
					if num == 0 then
						return num
					else
						return math.floor(num / factor + 0.5) * factor
					end
				end
				UserInputService.InputEnded:Connect(function(key)
					if key.UserInputType == Enum.UserInputType.MouseButton1 then
						db = false
					end
				end)
				bt.MouseButton1Down:Connect(function()
					db = true
				end)
				RunService.RenderStepped:Connect(function()
					if db then
						local MousePosX = UserInputService:GetMouseLocation().X
						local ButtonPos = bt.Position
						local FrameSizeX = frame.AbsoluteSize.X
						local FramePosX = frame.AbsolutePosition.X
						local Pos = Snap((MousePosX-FramePosX)/FrameSizeX,0.001)
						Per = math.clamp(Pos, 0, 1)
						bt.Position = UDim2.new(Per, 0, ButtonPos.Y.Scale, ButtonPos.Y.Offset)
					end
				end)
				bt.Changed:Connect(function()
					local Scale = bt.Position.X.Scale
					local Num = math.floor(Scale * 255)
					Color[KEY] = Num
					frame["Text"].Text = tostring(Num)
				end)
			end

			local R = slide(bt_color_R, color_frame_R, "R")
			local G = slide(bt_color_G, color_frame_G, "G")
			local B = slide(bt_color_B, color_frame_B, "B")

			RunService.RenderStepped:Connect(function()
				Preview.BackgroundColor3 = Color3.fromRGB( Color["R"], Color["G"], Color["B"])
			end)

			Enter_Button_New.MouseButton1Down:Connect(function()
				dbs = true
				Enter_Button_New:Destroy()
				button.BackgroundColor3 = Color3.fromRGB( Color["R"], Color["G"], Color["B"])
				Color_Pad.Visible = false
			end)
		end
	end)
end
function load_button (button,tb)
	if tb == true then
		button.Button.BackgroundColor3 = Style["ButtonColor_ON"]
	else
		button.Button.BackgroundColor3 = Style["ButtonColor_OFF"]
	end
end
------------------------------------------------------------
------------------------------ workspace
------------------------------------------------------------

--------------- Simple UI
---------- (Create UI)
local Frame_Button = new_framebutton("General")
local Frame = new_frame()

local Frame_Farme = new_optionframe(127, Frame["SF_1"])

local Head_Text = new_headtext('- -< Auto Farme >- -', Frame_Farme)
new_line(Head_Text)
local auto_driving = new_button("Auto Driving", Frame_Farme)
new_textlabel("Vehicle Speed", Frame_Farme)
local speed = new_slidebutton(500, Frame_Farme)
new_textlabel("Wait", Frame_Farme)
local waits = new_slidebutton(50, Frame_Farme)

local Frame_race = new_optionframe(127, Frame["SF_1"])
local Head_Text_2 = new_headtext('- -< Auto Race >- -', Frame_race)
new_line(Head_Text_2)
local auto_race = new_button("Auto Race", Frame_race)
new_textlabel("Map", Frame_race)
local map = new_selectbutton(Frame_race)
new_textlabel("Number", Frame_race)
local number = new_slidebutton(9, Frame_race)

---------- (Function on UI)
slide(speed, 1)
slide(waits, 1)
slide(number, 1)
map["Text"]["Button"].MouseButton1Down:Connect(function()
	open_select ({"Circuit"}, map["Text"])
end)
---------- (_G.Setting)
_G.Setting = {
	auto_driving = false,
	auto_race = false,
}
---------- (MouseButtonClick)
auto_race.MouseButton1Down:Connect(function()
	if _G.Setting["auto_race"] then
		auto_race.BackgroundColor3 = Style["ButtonColor_OFF"]
		_G.Setting["auto_race"] = false
	else
		auto_race.BackgroundColor3 = Style["ButtonColor_ON"]
		_G.Setting["auto_race"] = true
	end
	spawn(function()
		local maps = map["Text"].Text
		local numbers = tonumber((1).."."..number["Value"].Value)

		local map_date = {
			["Circuit"] = {
				Lap = 2,
				Pos = CFrame.new(-5650.8271484375, 14.441366195678711, -4517.63232421875)
			},
		}

		local info = TweenInfo.new(numbers/2)

		local function tweenModel(model, CF)
			local CFrameValue = Instance.new("CFrameValue")
			CFrameValue.Value = model:GetPrimaryPartCFrame()
			CFrameValue:GetPropertyChangedSignal("Value"):Connect(function()
				model:SetPrimaryPartCFrame(CFrameValue.Value)
			end)
			local tween = TweenService:Create(CFrameValue, info, {Value = CF})
			tween:Play()
			tween.Completed:Connect(function()
				CFrameValue:Destroy()
			end)
		end
		
		local root = GetHumanoidRootPart(Player)
		local times = Player.PlayerGui.MainHUD.RaceInfo.Time
		local db = false
		times.Text = "0:00.000"
		
		game:GetService("RunService").Stepped:Connect(function()
			if times.Text == "0:00.00" or times.Text == "0:00.000" then
				db = false
			else
				db = true
			end
		end)
		
		while _G.Setting["auto_race"] == true do
			if game:GetService('Workspace').Game.Races.LocalSession:FindFirstChild(maps) and
				db == true
			then
				print(times.Text)
				local car = game:GetService("Workspace").Vehicles[Player.Name]
				local all = game:GetService('Workspace').Game.Races.LocalSession[maps].Checkpoints
				local cp = all:GetChildren()
				for c = 1, map_date[maps]["Lap"] do
					for i = 1, #cp do
						if i then
							tweenModel(car, all:FindFirstChild(tostring(i)).CFrame)
							wait(numbers*1.5)
						end
					end
					wait()
				end
				local finish = game:GetService('Workspace').Game.Races.LocalSession[maps].Finish
				tweenModel(car, finish.CFrame)
				wait(numbers)
				car:SetPrimaryPartCFrame(map_date[maps]["Pos"])
			end
			times.Text = "0:00.000"
			wait(1)
		end
		
	end)
end)
auto_driving.MouseButton1Down:Connect(function()
	if _G.Setting["auto_driving"] then
		auto_driving.BackgroundColor3 = Style["ButtonColor_OFF"]
		_G.Setting["auto_driving"] = false
	else
		auto_driving.BackgroundColor3 = Style["ButtonColor_ON"]
		_G.Setting["auto_driving"] = true
	end
	spawn(function()
		local root = GetHumanoidRootPart(Player)
		local start = CFrame.new(-34482.4219, 31.9787312, -32806.1797, -0.893194795, 0.00311447401, -0.449659199, -2.34963081e-05, 0.999975681, 0.00697280327, 0.449669987, 0.00623863656, -0.893172979)
		root.CFrame = start
		if _G.Setting["auto_driving"] == true then
			local car = game:GetService("Workspace").Vehicles[Player.Name]
			car:SetPrimaryPartCFrame(start*CFrame.new(0, 1, 0))
			local bv = Instance.new("BodyVelocity", root)
			bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
			bv.Velocity = car:GetPrimaryPartCFrame().LookVector * speed["Value"].Value
		else
			if root:FindFirstChild("BodyVelocity") then
				root:FindFirstChild("BodyVelocity"):Destroy()
			end
		end
		while _G.Setting["auto_driving"] == true do
		if game:GetService("Workspace").Vehicles:FindFirstChild(Player.Name) then
			local car = game:GetService("Workspace").Vehicles[Player.Name]
			car:SetPrimaryPartCFrame(start*CFrame.new(0, 1, 0))
		end
			wait(waits["Value"].Value)
		end
	end)
end)
---------- (Function)
RunService.Stepped:Connect(function()
	local date = os.date("*t")
	local months = {
		"January", "February", "March", "April", "May", "June", "July", 
		"August", "September", "October", "November", "December"}
	TextName.Text = name.." | "..date.day.." "..months[date.month].." "..date.year
end)
